@{
    ViewData["Title"] = "Admin Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>




<div class="dashboard-ecommerce">
    <div class="container-fluid dashboard-content ">
        <!-- ============================================================== -->
        <!-- pageheader  -->
        <!-- ============================================================== -->
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                <div class="page-header">
                    <h2 class="pageheader-title">Dashboard </h2>
                    <p class="pageheader-text">Nulla euismod urna eros, sit amet scelerisque torton lectus vel mauris facilisis faucibus at enim quis massa lobortis rutrum.</p>
                    <div class="page-breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="#" class="breadcrumb-link">Dashboard</a></li>
                                <li class="breadcrumb-item active" aria-current="page">E-Commerce Dashboard Template</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <!-- ============================================================== -->
        <!-- end pageheader  -->
        <!-- ============================================================== -->
        <div class="ecommerce-widget">

            <div class="row">
                <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="text-muted">Total Revenue</h5>
                            <div class="metric-value d-inline-block">
                                <h1 class="mb-1">@ViewBag.TotalAmount.ToString("C")</h1>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="text-muted">Total Invoices</h5>
                            <div class="metric-value d-inline-block">
                                <h1 class="mb-1">@ViewBag.TotalInvoices</h1>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="text-muted">Total books</h5>
                            <div class="metric-value d-inline-block">
                                <h1 class="mb-1">@ViewBag.Books</h1>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="text-muted">Total users</h5>
                            <div class="metric-value d-inline-block">
                                <h1 class="mb-1">@ViewBag.Users</h1>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <!-- ============================================================== -->
                <!-- product category  -->
                <!-- ============================================================== -->
                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12">
                    <div class="card">
                        <h5 class="card-header">Product Category</h5>
                        <div class="card-body">
                            <canvas id="categoryChart" style="height: 315px;"></canvas>

                        </div>
                    </div>
                </div>

                <!-- ============================================================== -->
                <!-- end product category  -->
                <!-- product sales  -->
                <!-- ============================================================== -->
                <!-- Product Sales Chart -->
                <div class="col-xl-8 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Revenue by Quarter</h5>
                            <div>
                                <label for="selectYear">Select Year:</label>
                                <select id="selectYear" class="form-control">
                                    <!-- Populate the combo box with unique years from your data -->
                                    @foreach (var year in ViewBag.UniqueYears)
                                    {
                                        <option value="@year">@year</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="card-body">
                            <canvas id="revenueChart" style="height: 300px;"></canvas>
                        </div>
                    </div>
                </div>

                <!-- ============================================================== -->
                <!-- end product sales  -->
                <!-- ============================================================== -->

            </div>
            <div class="row">
                <!-- ============================================================== -->
                <!-- ============================================================== -->
                <!-- recent orders  -->
                <!-- ============================================================== -->
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div class="card">
                        <h5 class="card-header">Recent Orders</h5>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead class="bg-light">
                                        <tr class="border-0">
                                            <th class="border-0">Invoice ID</th>
                                            <th class="border-0">User ID</th>
                                            <th class="border-0">Date</th>
                                            <th class="border-0">Total price</th>
                                            <th class="border-0">Address</th>
                                            <th class="border-0">Note</th>
                                            <th class="border-0">SDT</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var invoice in ViewBag.recentInvoices)
                                        {
                                            <tr>
                                                <td>@invoice.InvoiceId</td>
                                                <td>@invoice.UserId</td>
                                                <td>@invoice.Date.ToShortDateString()</td>
                                                <td>@invoice.TotalPrice?.ToString("C")</td>
                                                <td>@invoice.Address</td>
                                                <td>@invoice.Note</td>
                                                <td>@invoice.Sdt</td>
                                                <td>
                                                    <a href="@Url.Action("Details", "Invoices", new { id = invoice.InvoiceId })" class="btn btn-outline-light float-right">View Details</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- ============================================================== -->
                <!-- end recent orders  -->
                <!-- ============================================================== -->

            </div>

        </div>
    </div>
</div>

<script>
    var categoryCounts = @Html.Raw(Json.Serialize(ViewBag.CategoryCounts));

    // Log the received data
    console.log("Received data:", categoryCounts);

    // Extract category names and book counts
    var categoryNames = categoryCounts.map(c => c.categoryName);
    var bookCounts = categoryCounts.map(c => c.bookCount);

    // Log the extracted data
    console.log("Extracted Category Names:", categoryNames);
    console.log("Extracted Book Counts:", bookCounts);

    // Use a wider range of colors
    var colors = [
        '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd',
        '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'
    ];

    // Get the canvas element and create a pie chart
    var ctx = document.getElementById('categoryChart').getContext('2d');
    var categoryChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: categoryNames,
            datasets: [{
                data: bookCounts,
                backgroundColor: colors.slice(0, categoryNames.length) // Use the colors based on the number of categories
            }]
        },
        options: {
            legend: {
                display: false
            }
        }
    });

    // Generate legend
    var legendHtml = '';
    for (var i = 0; i < categoryNames.length; i++) {
        legendHtml += `<span class="legend-item mr-3">
                                    <span class="fa-xs text-${getColorClass(i)} mr-1 legend-tile">
                                        <i class="fa fa-fw fa-square-full"></i>
                                    </span>
                                    <span class="legend-text">${categoryNames[i]}</span>
                                </span>`;
    }

    document.getElementById('legend').innerHTML = legendHtml;

    // Helper function to get Bootstrap color class based on index
    function getColorClass(index) {
        return colors[index % colors.length];
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Assuming you have a list of invoices in JavaScript
        var invoices = @Html.Raw(Json.Serialize(ViewBag.Invoices));

        // Function to get the quarter from a date
        function getQuarter(date) {
            return Math.ceil((date.getMonth() + 1) / 3);
        }

        // Function to group invoices by quarter
        function groupInvoicesByQuarter(selectedYear) {
            var filteredInvoices = invoices.filter(i => new Date(i.date).getFullYear() == selectedYear);

            // Grouping revenues by quarter
            var groupedRevenues = {};
            filteredInvoices.forEach(i => {
                var quarter = getQuarter(new Date(i.date));
                if (!groupedRevenues[quarter]) {
                    groupedRevenues[quarter] = 0;
                }
                groupedRevenues[quarter] += i.totalPrice !== null && i.totalPrice !== undefined ? i.totalPrice : 0;
            });

            return groupedRevenues;
        }

        // Drawing the chart using Chart.js
        var ctx = document.getElementById('revenueChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [],
                datasets: [{
                    label: 'Revenue',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    data: [],
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Function to update the chart based on the selected year
        function updateChart() {
            var selectedYear = document.getElementById('selectYear').value;
            console.log('Selected Year:', selectedYear);

            // Group invoices by quarter for the selected year
            var groupedRevenues = groupInvoicesByQuarter(selectedYear);

            // Update chart data
            chart.data.labels = Object.keys(groupedRevenues).map(q => 'Q' + q);
            chart.data.datasets[0].data = Object.values(groupedRevenues);

            // Update the chart
            chart.update();
        }

        // Initialize the chart with data for the current year
        updateChart();

        // Set the onchange event for the select element
        document.getElementById('selectYear').onchange = updateChart;
    });
</script>

<script>
    // Output ViewBag.Books to the browser console
    console.log('ViewBag.Books:', @Html.Raw(Json.Serialize(ViewBag.Books)));
</script>