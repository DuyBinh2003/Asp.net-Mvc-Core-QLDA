@*@model IEnumerable<DoAn.Models.Author>*@
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model X.PagedList.IPagedList<DoAn.Models.Author>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
    <div class="card">
        <h3 class="card-header d-flex justify-content-between align-items-center ">
            Danh sách tác giả
            <form asp-action="Index" method="get" class="form-inline">
                <div class="form-group">
                    <label for="searchString" class="sr-only">Search:</label>
                    <input type="text" name="searchString" id="searchString" class="form-control" placeholder="Search" value="@ViewData["CurrentFilter"]" />
                </div>
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
            <a class=" btn btn-primary " asp-action="Create">Create</a>
        </h3>  
        <div class="table-responsive">
            <table id="example" class="table table-striped table-bordered second" style="width:100%">
                <thead>
                    <tr>
                        <th class="text-center col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2">
                            Name
                        </th>
                        <th class="text-center col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3">
                            ImgPath
                        </th>
                        <th class="text-center col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">
                            Description
                        </th>
                        <th class="text-center col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td class="text-center">
                                <img class="author_index text-center" src=" @Html.DisplayFor(modelItem => item.ImgPath)">
                            </td>
                            <td class="text-center">
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td scope="col" class="text-center col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1">
                                <a class="btn btn-success btn-tone m-r-5" asp-action="Details" asp-route-id="@item.AuthorId">View</a>
                            </td>
                        </tr>
                    }
            </table>
        </div>
        <br/>
        <div class="pagination-container">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @if (Model.PageCount > 1)
                    {
                        <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = 1, searchString = ViewData["CurrentFilter"] })" aria-label="First">
                                <span aria-hidden="true">&laquo;&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchString = ViewData["CurrentFilter"] })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        @for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, searchString = ViewData["CurrentFilter"] })">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchString = ViewData["CurrentFilter"] })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                        <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, searchString = ViewData["CurrentFilter"] })" aria-label="Last">
                                <span aria-hidden="true">&raquo;&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>


    </div>
</div>
<!-- ============================================================== -->
<!-- end data table  -->
<!-- ============================================================== -->
